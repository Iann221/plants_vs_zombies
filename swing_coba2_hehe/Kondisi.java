/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.*;
import java.util.concurrent.TimeUnit;
import javax.swing.*;
/**
 *
 * @author seana
 */
public class Kondisi extends javax.swing.JFrame {

    /**
     * Creates new form Kondisi
     */

     public static int getRandom(int min, int max) {
		Random r1 = new Random();
		return r1.nextInt((max - min) + 1) + min;
	} // method untuk mendapatkan random number dari min sampai max

    public static void tunggu(){
        try{
            Thread.sleep(1000);
        } catch (Exception e) {

        }
    }
    public Kondisi() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        // untuk swing
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        // untuk kode

        gameend = -1;
        min = 1;
        max = 5;
        jmlzombie = 0;
        jmlghoul = 0;
        s = new Scanner(System.in);
        bulletlist = new LinkedList<Bullet>();
        zombielist = new ArrayList<Zombie>();
        plantlist = new ArrayList<Plant>();
        // String cmd = "";
        lawn1 = new Lawn();
        sunflower = 500;
        petak = lawn1.getPetak();

        //buat label dan dimasukkan ke list label
        jLabel20 = new javax.swing.JLabel();
        labellist = new ArrayList<JLabel>();

        for (int i=0; i<60;i++){
            jLabel20 = new javax.swing.JLabel();
            labellist.add(jLabel20);
        }

        //kode main sebelumnya

        while (jmlzombie!=2){ // pilih 2 zombie ditempatkan random
            random = getRandom(min,max);
            Zombie z = new RegularZombie(random,12);
            if(!lawn1.cekAda(zombielist,z)){ // untuk memastikan tidak ada zombie di row sama
                zombielist.add(z);
                jmlzombie++;
            }
        }
        while (jmlghoul!=1){ // pilih 1 ghoul ditempatkan random
            random = getRandom(min,max);
            Zombie z = new Ghoul(random,12);
            if(!lawn1.cekAda(zombielist,z)){
                zombielist.add(z);
                jmlghoul++;
            }
        }
        lawn1.set(zombielist);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        // jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\lawn.jpg")); // NOI18N
        // gridBagConstraints = new java.awt.GridBagConstraints();
        // gridBagConstraints.gridx = 0;
        // gridBagConstraints.gridy = 1;
        // jPanel1.add(jLabel2, gridBagConstraints);

        jLabel1.setText("Rows: 1 - 5");

        jLabel11.setText("Column: 1 - 12");

        jLabel14.setText("Pilihan Plant:");
        jLabel14.setToolTipText("");

        jLabel43.setText("Sunflower sekarang: " + sunflower);

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\peashootercard.jpg")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\repeatercard.jpg")); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Start");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        // jButton3.setText("SKIP");
        // jButton3.addActionListener(new java.awt.event.ActionListener() {
        //     public void actionPerformed(java.awt.event.ActionEvent evt) {
        //         jButton3ActionPerformed(evt);
        //     }
        // });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 759, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel11)
                            .addComponent(jLabel14)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(jButton1))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(190, 190, 190)
                                        .addComponent(jButton2)))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel43)
                                    .addComponent(jButton3))))
                                    //.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton2)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addGap(19, 19, 19)
                        .addComponent(jButton3)))
                        //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        //.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(97, 97, 97))
        );

        // set label

        jLabel43.setText("Sunflower sekarang: " + sunflower);
        gridBagConstraints = new java.awt.GridBagConstraints();
        int x = 1;
        int y = 1;
        char e;
        for (JLabel label : labellist){
            if (x==13){
                x = 1;
                y ++;
            }
            e = petak[y][x];
            switch(e){
                case 'P':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\peashooter.jpg"));
                    break;
                case 'Z':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\zombie.jpg"));
                    break;
                case 'R':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\repeater.jpg"));
                    break;
                case 'G':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\ghoul.jpg"));
                    break;
                case '-':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\pea.jpg"));
                    break;
                default:
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\lawn.jpg"));
                    break;
            }
             gridBagConstraints.gridx = x;
             gridBagConstraints.gridy = y;
             jPanel1.add(label, gridBagConstraints);
            x++;
        }

        pack();
    }// </editor-fold>       

    public void change(){
        java.awt.GridBagConstraints gridBagConstraints;
        jLabel43.setText("Sunflower sekarang: " + sunflower);
        gridBagConstraints = new java.awt.GridBagConstraints();
        int x = 1;
        int y = 1;
        char e;
        for (JLabel label : labellist){
            if (x==13){
                x = 1;
                y ++;
            }
            e = petak[y][x];
            switch(e){
                case 'P':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\peashooter.jpg"));
                    break;
                case 'Z':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\zombie.jpg"));
                    break;
                case 'R':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\repeater.jpg"));
                    break;
                case 'G':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\ghoul.jpg"));
                    break;
                case '-':
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\pea.jpg"));
                    break;
                default:
                    label.setIcon(new javax.swing.ImageIcon("C:\\Users\\seana\\OneDrive\\Desktop\\codes\\plants_vs_zombies\\swing\\gambar\\lawn.jpg"));
                    break;
            }
            x++;
        }
    }

    public void start(){
        // Thread worker = new Thread(){

        //     public void run(){

        //         for(int i=0; i<=10; i++) {

        //          	jLabel43.setText(Integer.toString(i));

        //          	try {

        //         	 		Thread.sleep(1000);

        //          	} catch (InterruptedException e) {


        //          	}

        //         }

        //         jLabel1.setText("Completed.");

        //   		System.out.println("Invoke and Wait...");

        //     }

     	// };
 	    // worker.start();

        //kode asli

        Thread worker = new Thread(){

            public void run(){
                do {
                    for (Bullet b: bulletlist){
                        b.move();
                    }
                    for (Plant p: plantlist){
                        if (!p.isDead()){
                            bulletlist.add(p.shoot());
                        }
                        if ((bulletlist.getLast().getX()==-1)&&(bulletlist.getLast().getX()==-1)){
                            bulletlist.removeLast();
                        }
                    }
                    lawn1.cekTingkahZombie(plantlist,zombielist);
                    lawn1.cekKena(bulletlist,zombielist);
                    lawn1.reset();
                    lawn1.set(bulletlist);
                    lawn1.set(zombielist);
                    lawn1.set(plantlist);
                    lawn1.cetak();
                    change();
                    gameend = lawn1.cekMenang(zombielist);
                    tunggu();
                } while (gameend==0);
                if(gameend==1){
                    System.out.println("Zombie yang mati:");
                    for (Zombie z : zombielist){
                        if(z.isDead()){
                            Box<Zombie> zombiebox = new Box<Zombie>();
                            zombiebox.add(z);
                            zombiebox.print(); 
                        }
                    }
                } else {
                    System.out.println("Plant yang mati");
                    for (Plant p : plantlist){
                        if(p.isDead()){
                            Box<Plant> plantbox = new Box<Plant>();
                            plantbox.add(p);
                            plantbox.print();
                        }
                    }
                }
            }
        };
        worker.start();
    }                 

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        pc = new PilihPea();
        pc.setVisible(true);
        // while(!pc.getchosen()){
            
        // }
        // p = pc.getplant(); 
        // plantlist.add(p);
        // System.out.println(plantlist);
        // sunflower -= 100;
        // lawn1.set(plantlist);
        // change();
    }   

     private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        Plant p = new Repeater(5,5);
        plantlist.add(p);
        sunflower -= 300;
        lawn1.set(plantlist);
        change();
    }

    public int getend(){
        return gameend;
    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        //jRadioButton1.setEnabled(false);

        // for (Bullet b: bulletlist){
        //     b.move();
        // }
        // for (Plant p: plantlist){
        //     if (!p.isDead()){
        //         bulletlist.add(p.shoot());
        //     }
        // }
        // lawn1.cekTingkahZombie(plantlist,zombielist);
        //     lawn1.cekKena(bulletlist,zombielist);
        //     lawn1.reset();
        //     lawn1.set(bulletlist);
        //     lawn1.set(zombielist);
        //     lawn1.set(plantlist);
        //     change();
        //     lawn1.cetak();
        //gameend ++;
        start();
         
    }                                             

    // private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    //     // TODO add your handling code here:
    // }                                        

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    //private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    
    char[][] petak;
    Lawn lawn1;
    int sunflower;
    List<JLabel> labellist;
    int random;
    Scanner s;
    LinkedList<Bullet> bulletlist;
    List<Zombie> zombielist;
    List<Plant> plantlist;
    int gameend;
    int min;
    int max;
    int jmlzombie;
    int jmlghoul;
    Plant p;
    PilihPea pc;
    //Jalan j1;
        // String cmd = "";
    // End of variables declaration                   
}
